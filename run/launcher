#!/bin/bash
#
# ARM-X QEMU Launcher
#
# By Saumil Shah
# The Exploit Laboratory
#
# requires dialog to be installed

source /armx/run/utils
check_if_logging_required
new_log

source /armx/run/parsedevices

hostfs=/armx/hostfs/hostfs.ext2

fundialog=${fundialog=dialog}

declare -a choices

j=0

for i in $(seq 0 $((count - 1)))
do
   choices[$j]=$i
   choices[$((j + 1))]=${descs[$i]}
   j=$((j + 2))
done

x=`$fundialog --stdout --clear --cancel-label "Quit" \
   --backtitle "ARM-X - The Versatile ARM IoT Device Emulator" \
   --menu "ARM-X Launcher" 0 0 0 "${choices[@]}"`

status=$?
clear

if [ $status -ne 0 ]
then
   exit
fi

cpu=""
dtb=""

if [ "${cpus[$x]}" != "" ]
then
   cpu="-cpu ${cpus[$x]}"
fi

if [ "${dtbs[$x]}" != "" ]
then
   dtb="-dtb /armx/dtb/${dtbs[$x]}"
fi

append=${bootargs[$x]}

#Different commands are used for mips CPUs like 4Kc and ARM CPUs
if [[ "${cpus[$x]}" == 4Kc ]] 
then
    hostfs="/armx/EMINENT/debian_squeeze_mipsel_standard.qcow2"
    qemucmd="/armx/run/${qemus[$x]} -M ${machines[$x]} ${cpu} -m ${mems[$x]} -kernel /armx/${ids[$x]}/kernel/${kernels[$x]} ${dtb} -hda ${hostfs} -append \"$append\" -net ${nics[$x]} -net tap,ifname=tap0,script=no,downscript=no -no-reboot -nographic"
else
    hostfs=/armx/hostfs/hostfs.ext2
    qemucmd="/armx/run/${qemus[$x]} -M ${machines[$x]} ${cpu} -m ${mems[$x]} -kernel /armx/${ids[$x]}/kernel/${kernels[$x]} ${dtb} -drive file=${hostfs},${drives[$x]} -append \"$append\" -net ${nics[$x]} -net tap,ifname=tap0,script=no,downscript=no -nographic"
fi

log "[+] QEMU Launch Command"
log "${qemucmd}"
echo "${qemucmd}"

cp /armx/run/run-init-template /armx/${ids[$x]}/run-init
cp /armx/run/run-binsh-template /armx/${ids[$x]}/run-binsh

echo ${ids[$x]} > /tmp/armxrunning

if [ "$CONSOLELOGFILE" ]
then
   script -a -f -c "${qemucmd}" ${CONSOLELOGFILE}
else
   eval "$qemucmd"
fi
