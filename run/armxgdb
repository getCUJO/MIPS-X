#!/bin/bash
#
# Script to invoke gdbserver on the ARM-X instance and attach
# multi-arch gdb to the remote gdbserver
#
# Requires a parameter - pid or process name


if [ "$1" = "" ]
then
   echo "Usage: $0 remote <pid>|<process name>"
   echo "Use armxps to obtain remote processes"
   exit
fi

if [[ "$1" =~ ^[0-9]+$ ]]
then
   attach="--attach $1"
else
   attach="--attach \\\`pidof $1\\\`"
fi

source /armx/run/checkarmx
ARMXDEVICE=$(</tmp/armxrunning)
ARMXDEVICEID=$(</tmp/armxrunningid)
source /armx/run/parseini /armx/$ARMXDEVICE/config
ROOTFSPATH="/armx/$ARMXDEVICE/$ROOTFS"

source /armx/run/utils
check_if_logging_required
new_log

source /armx/run/parsedevices

gdb=${gdb[$ARMXDEVICEID]}
extraopts=${gdb_extra[$ARMXDEVICEID]}

echo "${gdb}|${extraopts}"

$gdb -q \
   -ex="target remote | ssh -T root@192.168.100.2 gdbserver - $attach" \
   -ex="set sysroot target:$ROOTFSPATH" \
   $extraopts
